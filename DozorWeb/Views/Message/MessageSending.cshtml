@model DozorWeb.Models.MessageSendingViewModel

@{
    ViewBag.Title = "Страница сообщений";
}

@section Scripts
{
<script>
    function FillSubgroups() {
        var gradeId = $('#SelectedGradeId').val();
        $.ajax({
            url: '/Message/GetSubgroups',
            type: "GET",
            dataType: "JSON",
            data: { gradeId: gradeId },
            success: function (subgroups) {
                $("#SelectedSubgroupId").html("");
                $.each(subgroups, function (i, subgroup) {
                    $("#SelectedSubgroupId").append(
                        $('<option></option>').val(subgroup.SubgroupId).html(subgroup.Subgroup));
                });
            }
        });
        FillStudents();
    }

    function FillStudents() {
        var gradeId = $('#SelectedGradeId').val();
        var subgroupId = $('#SelectedSubgroupId').val();
        $.ajax({
            url: '/Message/GetStudents',
            type: "GET",
            dataType: "JSON",
            data: { gradeId : gradeId, subgroupId: subgroupId },
            success: function (students) {
                $("#SelectedStudentId").html("");
                $.each(students, function (i, student) {
                    $("#SelectedStudentId").append(
                        $('<option></option>').val(student.StudentId).html(student.Name));
                });
            }
        });
    }

    $(function () {
        $('.datepicker').datepicker();
    });

    function SendMessage() {
        var gradeId = $('#SelectedGradeId').val();
        var subgroupId = $('#SelectedSubgroupId').val();
        var studentId = $('#SelectedStudentId').val();
        var messageText = $('#MessageText').val();
        var messageExpirationDateTme = $('#MessageExpirationDateTme').datepicker({ dateFormat: 'mm-dd-yy' }).val();
        var selectedMessageShowDirection = $('#SelectedMessageShowDirection').val();
        $.ajax({
            url: '/Message/SendMessage',
            type: "GET",
            dataType: "JSON",           
            data: {
                gradeId: gradeId, subgroupId: subgroupId,
                studentId: studentId, messageText: messageText,
                messageExpirationDateTme: messageExpirationDateTme,
                selectedMessageShowDirection: selectedMessageShowDirection
            },
            success: function (response) {
                alert('Сообщение успешно сохранено');
            },
            error: function (response) {
                alert('Введены некорректные данные');
            }
        });
    }
</script>
}

<h3>Отправка сообщений</h3>

<div class="row">
    <div class="form-group">
        <br />
        @Html.Label("Класс", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedGradeId,
                                Model.Grades,
                                "Выберите класс",
                                new
                                {
                                    @class = "form-control",
                                    @onchange = "FillSubgroups()"
                                })
            @Html.ValidationMessageFor(m => m.SelectedGradeId, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>

    <div class="form-group">
        <br />
        @Html.Label("Подгруппа", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedSubgroupId,
                                   Model.Subgroups,
                              "Выберите подгруппу",
                              new
                              {
                                  @class = "form-control",
                                  @onchange = "FillStudents()"
                              })
            @Html.ValidationMessageFor(m => m.SelectedSubgroupId, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>

    <div class="form-group">
        @Html.Label("Студент", new { @class = "control-label col-md-2" })
        <br>
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedStudentId,
                        Model.Students,
                        "Выберите студента",
                        new
                        {
                            @class = "form-control"
                        })
            @Html.ValidationMessageFor(m => m.SelectedStudentId, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>

    <div class="form-group input-group-sm">
        <br />
        @Html.Label("Дата, до которой сообщение актуально:", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MessageExpirationDateTme, new { @class = "form-control datepicker", placeholder = "Введите дату здесь..." })
            @Html.ValidationMessageFor(model => model.MessageExpirationDateTme)
        </div>
        <br />
    </div>

    <div class="form-group">
        <br />
        @Html.Label("Показывать сообщение:", new { @class = "control-label col-md-2" })
        <br>
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedMessageShowDirection,
                        Model.MessageShowDirections,
                        new
                        {
                            @class = "form-control"
                        })
            @Html.ValidationMessageFor(m => m.SelectedMessageShowDirection, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>

    <div>
        <br />
        @Html.Label("Текст сообщения:", new { @class = "control-label col-md-2" })
        <br />
        @Html.TextArea("MessageText", "", 5, 100, new { @class = "message-area" })
        <br />
    </div>

    <div class="col-md-4">
        <br />
        <button name="submitButton" class="btn btn-primary" value="submit" onclick="javascript:SendMessage();">Отправить сообщение</button>
    </div>
</div>
